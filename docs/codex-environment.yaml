codex_environment:
  repository: "leonardsellem/codex-subagents-mcp"
  name: "codex-subagents-mcp"
  description: "Tiny MCP server that provides Claude-style sub-agents (reviewer, debugger, security) for the Codex CLI; each call runs in a clean temp workdir and shells out to `codex exec` with the right profile."

  code_execution:
    container_image: "universal"
    preinstalled_packages: true
    runtimes:
      - language: "node"
        version: "20"          # README requires Node >=18; choose LTS 20
        package_manager: "npm"

  environment:
    variables:
      - name: "ENV"
        value: "development"
        reason: "Default runtime environment for local runs and tests"
      - name: "CODEX_SUBAGENTS_DIR"
        value: ""              # optional; if set, points to your custom agents dir
        reason: "Lets you register extra agents without code changes"
    secrets:
      - name: "OPENAI_API_KEY"
        reason: "Codex CLI uses this to call OpenAI models when sub-agents delegate work"

  container_caching: true

  setup_script:
    mode: "manual"
    bash: |-
      #!/usr/bin/env bash
      set -euo pipefail

      echo "==> Installing dependencies (lock-aware)"
      if [ -f package.json ]; then
        if [ -f package-lock.json ]; then
          echo "Attempting: npm ci"
          if ! npm ci --no-audit --fund=false; then
            echo "npm ci failed (lockfile out of sync). Repairing lockfile..."
            npm install --package-lock-only --no-audit --fund=false
            echo "Retrying: npm ci"
            npm ci --no-audit --fund=false
          fi
        else
          echo "No package-lock.json found. Running npm install"
          npm install --no-audit --fund=false
        fi
      fi

      echo "==> Build (non-fatal if project has no build)"
      npm run build || true

      echo "==> Lint & tests (non-fatal during setup)"
      npm run lint || true
      npm test || true

      echo "==> Quick verification"
      [ -d dist ] && ls -lh dist || true
      echo "Setup complete."
  maintenance_script: |
    #!/usr/bin/env bash
    set -euo pipefail
    echo "==> Maintenance: lock-aware refresh"
    if [ -f package.json ]; then
      if [ -f package-lock.json ]; then
        if ! npm ci --no-audit --fund=false; then
          echo "Repairing lockfile then retrying ci..."
          npm install --package-lock-only --no-audit --fund=false
          npm ci --no-audit --fund=false
        fi
      else
        npm install --no-audit --fund=false
      fi
    fi

    echo "==> Smoke: ensure Node/npm available"
    node -v && npm -v
    echo "Maintenance complete."
  network:
    agent_internet_access: true
    domain_allowlist_profile: "Common dependencies"
    additional_allowed_domains:
      - "api.openai.com"     # Codex CLI calls OpenAI APIs
    allowed_http_methods: ["GET","POST","HEAD","OPTIONS"]

  validations:
    smoke_tests:
      - name: "Node present"
        command: "node -v"
      - name: "NPM present"
        command: "npm -v"
      - name: "Build artifact exists"
        command: "test -f dist/codex-subagents.mcp.js && echo OK"
      - name: "List tools"
        command: "node dist/codex-subagents.mcp.js --help || true"

  project_insights:
    detected_languages: ["TypeScript","JavaScript"]
    frameworks: ["MCP server"]
    package_managers: ["npm"]
    runtime_versions: { node: ">=18 (using 20 LTS here)" }
    external_services: ["OpenAI via Codex CLI"]
    test_commands: ["npm test","npm run e2e"]